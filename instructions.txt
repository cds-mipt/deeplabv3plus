1. To clone directory:
    git clone https://github.com/cds-mipt/deeplabv3plus.git

2. To change 
2.1 in deeplabv3+/deeplab/datasets according to examples:
    1. ./classes_palette.py: 
        - CLASSES, PALETTE 
        
    2. ./convert.sh
        - WORK_DIR (L.11)
        - image_fromat (L.40)
        
    3. ./data_generator.py:
        - _WINTER_CITY_INFORMATION (L.102-110) 
        - name of dataset (L.116)
        - label (L.296-300) # don't change if there are test masks
        
2.2 in deeplabv3+/deeplab/utils:
    1. ./get_dataset_colormap.py:
        - name of dataset (L.43)
        - number of classes (L.51)
        - create_winter_city_label_colormap() (L.54-74)
        - get_winter_city_name() (L.76-77)
        - case for your dataset (L.412-413)
        
2.4 in deeplabv3+/deeplab/main:
    1. ./train.sh:
        - DATA_FOLDER (L.26)
        - EXP_FOLDER (L.28)
        - parameters of train.py (L.43-66)
    2. ./eval.sh:
        - DATA_FOLDER (L.26)
        - EXP_FOLDER (L.28)
        - parameters of eval.py (L.40-54)
    3. ./vis.sh:
        - DATA_FOLDER (L.26)
        - EXP_FOLDER (L.28)
        - parameters of vis.py (L.40-55)
        
3. Loss weights per class:
    1. in /deeplabv3plus/deeplab/core/utils.py:
       To change L.147-149:
       weight_mask = tf.einsum('xy,y->x',
                          tf.one_hot(labels, num_classes, dtype=tf.float32),
                          label_weights)
    2. in /deeplabv3plus/deeplab/utils/train_utils.py:
        To add between L.112-115:
    loss_weight_ = []
    loss_weight_.append(1) #0 background
    loss_weight_.append(15) #1 traffic_sign
    loss_weight_.append(20) #2 car
    loss_weight_.append(20) #3 double_solid
    loss_weight_.append(30) #4 intermittent
    loss_weight_.append(20) #5 person
    loss_weight_.append(20) #6 solid
    loss_weight_.append(20) #7 stop_lane
    loss_weight_.append(25) #8 traffic_light
    loss_weight_.append(5) #9 borders
    loss_weight_.append(5) #10 road
    loss_weight_.append(5) #11 sky
    
    weights = utils.get_label_weight_mask(
        scaled_labels, ignore_label, num_classes, label_weights=loss_weight_)
